<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="30679" started-at="2020-08-23T11:32:52 IST" finished-at="2020-08-23T11:33:22 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="30679" started-at="2020-08-23T11:32:52 IST" finished-at="2020-08-23T11:33:22 IST">
      <class name="regressionScripts.Regression">
        <test-method status="PASS" signature="setup()[pri:0, instance:regressionScripts.Regression@e320068]" name="setup" is-config="true" duration-ms="356" started-at="2020-08-23T11:32:51 IST" finished-at="2020-08-23T11:32:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="openApp(java.lang.String)[pri:0, instance:regressionScripts.Regression@e320068]" name="openApp" is-config="true" duration-ms="7350" started-at="2020-08-23T11:32:52 IST" finished-at="2020-08-23T11:32:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="invalidLogin()[pri:0, instance:regressionScripts.Regression@e320068]" name="invalidLogin" duration-ms="1923" started-at="2020-08-23T11:32:59 IST" finished-at="2020-08-23T11:33:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:regressionScripts.Regression@e320068]" name="closeApp" is-config="true" duration-ms="800" started-at="2020-08-23T11:33:01 IST" finished-at="2020-08-23T11:33:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin status=SUCCESS method=Regression.invalidLogin()[pri:0, instance:regressionScripts.Regression@e320068] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="openApp(java.lang.String)[pri:0, instance:regressionScripts.Regression@e320068]" name="openApp" is-config="true" duration-ms="6059" started-at="2020-08-23T11:33:02 IST" finished-at="2020-08-23T11:33:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="sendBugReport()[pri:0, instance:regressionScripts.Regression@e320068]" name="sendBugReport" duration-ms="4900" started-at="2020-08-23T11:33:08 IST" finished-at="2020-08-23T11:33:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendBugReport -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:regressionScripts.Regression@e320068]" name="closeApp" is-config="true" duration-ms="852" started-at="2020-08-23T11:33:13 IST" finished-at="2020-08-23T11:33:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendBugReport status=SUCCESS method=Regression.sendBugReport()[pri:0, instance:regressionScripts.Regression@e320068] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="openApp(java.lang.String)[pri:0, instance:regressionScripts.Regression@e320068]" name="openApp" is-config="true" duration-ms="6008" started-at="2020-08-23T11:33:14 IST" finished-at="2020-08-23T11:33:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="validLoginLogout()[pri:0, instance:regressionScripts.Regression@e320068]" name="validLoginLogout" duration-ms="1585" started-at="2020-08-23T11:33:20 IST" finished-at="2020-08-23T11:33:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginLogout -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:regressionScripts.Regression@e320068]" name="closeApp" is-config="true" duration-ms="1156" started-at="2020-08-23T11:33:21 IST" finished-at="2020-08-23T11:33:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginLogout status=SUCCESS method=Regression.validLoginLogout()[pri:0, instance:regressionScripts.Regression@e320068] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="FAIL" signature="tearDown()[pri:0, instance:regressionScripts.Regression@e320068]" name="tearDown" is-config="true" duration-ms="3" started-at="2020-08-23T11:33:22 IST" finished-at="2020-08-23T11:33:22 IST">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at genric.Genric_Test.tearDown(Genric_Test.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:351)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- regressionScripts.Regression -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
